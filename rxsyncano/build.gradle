buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }

    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

group = 'com.pablobaldez'
def artifact = 'rxsyncano'
version = '1.0.0'

apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

def siteUrl = 'https://github.com/pablobaldez/RxSyncano'
def gitUrl = 'https://github.com/pablobaldez/RxSyncano.git'
def issueUrl = 'https://github.com/pablobaldez/RxSyncano/issues'

Properties properties = new Properties()
properties.load(project.rootProject.file('gradle.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = artifact
        desc = 'Syncano as reactive framework'
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android', 'syncano', 'rx', 'reactive']
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            //noinspection GroovyAssignabilityCheck
            project {
                packaging 'aar'
                name artifact
                groupId 'com.pablobaldez'
                artifactId artifact
                version version
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'pablobaldez'
                        name 'Pablo Baldez'
                        email 'pablo_baldez@outlook.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'lgibs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile ('io.reactivex:rxjava:1.0.7')
    compile 'io.syncano:library:4.1.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}